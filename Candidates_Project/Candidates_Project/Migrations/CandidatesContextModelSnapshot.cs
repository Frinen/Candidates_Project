// <auto-generated />
using System;
using Candidates_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Candidates_Project.Migrations
{
    [DbContext(typeof(CandidatesContext))]
    partial class CandidatesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Candidates_Project.Model.Candidate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<string>("Sex");

                    b.Property<string>("Skype");

                    b.HasKey("ID");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("Candidates_Project.Model.CandidateLanguage", b =>
                {
                    b.Property<int>("CandidateID");

                    b.Property<int>("LanguageID");

                    b.Property<string>("Level")
                        .IsRequired();

                    b.HasKey("CandidateID", "LanguageID");

                    b.HasIndex("LanguageID");

                    b.ToTable("CandidateLanguages");
                });

            modelBuilder.Entity("Candidates_Project.Model.CandidateSchool", b =>
                {
                    b.Property<int>("CandidateID");

                    b.Property<int>("HighSchoolID");

                    b.Property<string>("Degree")
                        .IsRequired();

                    b.Property<DateTime>("From");

                    b.Property<DateTime>("To");

                    b.HasKey("CandidateID", "HighSchoolID");

                    b.HasIndex("HighSchoolID");

                    b.ToTable("CandidateSchools");
                });

            modelBuilder.Entity("Candidates_Project.Model.CandidateSkill", b =>
                {
                    b.Property<int>("CandidateID");

                    b.Property<int>("SkillID");

                    b.Property<string>("Level")
                        .IsRequired();

                    b.Property<int>("Month");

                    b.HasKey("CandidateID", "SkillID");

                    b.HasIndex("SkillID");

                    b.ToTable("CandidateSkills");
                });

            modelBuilder.Entity("Candidates_Project.Model.HighSchool", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("HighSchools");
                });

            modelBuilder.Entity("Candidates_Project.Model.Language", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Candidates_Project.Model.Options", b =>
                {
                    b.Property<int>("CandidateID");

                    b.Property<bool>("CanRelocate");

                    b.Property<bool>("CanWorkInTheOffice");

                    b.Property<bool>("CanWorkRemotly");

                    b.HasKey("CandidateID");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Candidates_Project.Model.Skill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Candidates_Project.Model.CandidateLanguage", b =>
                {
                    b.HasOne("Candidates_Project.Model.Candidate", "Candidate")
                        .WithMany("CandidateLanguages")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Candidates_Project.Model.Language", "Language")
                        .WithMany("CandidateLanguages")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Candidates_Project.Model.CandidateSchool", b =>
                {
                    b.HasOne("Candidates_Project.Model.Candidate", "Candidate")
                        .WithMany("CandidateSchools")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Candidates_Project.Model.HighSchool", "HighSchool")
                        .WithMany("Candidate_School")
                        .HasForeignKey("HighSchoolID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Candidates_Project.Model.CandidateSkill", b =>
                {
                    b.HasOne("Candidates_Project.Model.Candidate", "Candidate")
                        .WithMany("CandidateSkills")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Candidates_Project.Model.Skill", "Skill")
                        .WithMany("CandidateSkills")
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Candidates_Project.Model.Options", b =>
                {
                    b.HasOne("Candidates_Project.Model.Candidate", "Candidate")
                        .WithOne("Options")
                        .HasForeignKey("Candidates_Project.Model.Options", "CandidateID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
